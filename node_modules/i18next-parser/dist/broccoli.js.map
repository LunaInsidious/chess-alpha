{"version":3,"file":"broccoli.js","names":["colors","fse","Plugin","rsvp","sort","vfs","i18nTransform","Promise","i18nextParser","_Plugin","_inherits","_super","_createSuper","inputNodes","_this","options","arguments","length","undefined","_classCallCheck","apply","_createClass","key","value","build","_this2","outputPath","resolve","reject","files","count","src","inputPaths","map","x","pipe","on","file","silent","console","log","green","path","push","outputFile","contents","message","region","trim","red","yellow","String","all","then","default"],"sources":["../src/broccoli.js"],"sourcesContent":["import colors from 'colors'\nimport fse from 'fs-extra'\nimport Plugin from 'broccoli-plugin'\nimport rsvp from 'rsvp'\nimport sort from 'gulp-sort'\nimport vfs from 'vinyl-fs'\n\nimport i18nTransform from './transform.js'\n\nconst Promise = rsvp.Promise\n\nexport default class i18nextParser extends Plugin {\n  constructor(inputNodes, options = {}) {\n    super(...arguments)\n    this.options = options\n  }\n\n  build() {\n    const outputPath = this.outputPath\n    return new Promise((resolve, reject) => {\n      const files = []\n      let count = 0\n\n      vfs\n        .src(this.inputPaths.map((x) => x + '/**/*.{js,hbs}'))\n        .pipe(sort())\n        .pipe(\n          new i18nTransform(this.options)\n            .on('reading', function (file) {\n              if (!this.options.silent) {\n                console.log('  [read]  '.green + file.path)\n              }\n              count++\n            })\n            .on('data', function (file) {\n              files.push(fse.outputFile(file.path, file.contents))\n              if (!this.options.silent) {\n                console.log('  [write] '.green + file.path)\n              }\n            })\n            .on('error', function (message, region) {\n              if (typeof region === 'string') {\n                message += ': ' + region.trim()\n              }\n              console.log('  [error] '.red + message)\n            })\n            .on('finish', function () {\n              if (!this.options.silent) {\n                console.log()\n                console.log(\n                  '  Stats:  '.yellow + String(count) + ' files were parsed'\n                )\n              }\n\n              Promise.all(files).then(() => {\n                resolve(files)\n              })\n            })\n        )\n    })\n  }\n}\n"],"mappings":"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"}