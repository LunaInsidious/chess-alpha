import type { Configuration, IgnorePatterns, WorkspaceConfiguration } from './types/config.js';
import type { PackageJson } from './types/package-json.js';
import { type Graph } from './util/pkgs-graph.js';
type ConfigurationManagerOptions = {
    cwd: string;
    isProduction: boolean;
    isStrict: boolean;
    isIncludeEntryExports: boolean;
};
export type Package = {
    dir: string;
    name: string;
    pkgName: string | undefined;
    manifest: PackageJson;
};
export type Workspace = {
    name: string;
    pkgName: string;
    dir: string;
    ancestors: string[];
    config: WorkspaceConfiguration;
    manifestPath: string;
    ignoreMembers: IgnorePatterns;
};
export declare class ConfigurationChief {
    cwd: string;
    isProduction: boolean;
    isStrict: boolean;
    isIncludeEntryExports: boolean;
    config: Configuration;
    manifestPath?: string;
    manifest?: PackageJson;
    ignoredWorkspacePatterns: string[];
    workspacePackages: Map<string, Package>;
    workspacePackagesByName: Map<string, Package>;
    additionalWorkspaceNames: Set<string>;
    availableWorkspaceNames: string[];
    availableWorkspacePkgNames: Set<string>;
    availableWorkspaceDirs: string[];
    packageGraph: Graph | undefined;
    includedWorkspaces: Workspace[];
    resolvedConfigFilePath?: string;
    rawConfig?: any;
    constructor({ cwd, isProduction, isStrict, isIncludeEntryExports }: ConfigurationManagerOptions);
    init(): Promise<void>;
    private loadResolvedConfigurationFile;
    getRules(): import("./types/issues.js").Rules;
    getFilters(): {
        dir: string;
    } | {
        dir?: undefined;
    };
    private normalize;
    private setWorkspaces;
    private addRootPackage;
    private getListedWorkspaces;
    private getIgnoredWorkspacePatterns;
    private getConfiguredWorkspaceKeys;
    private getAdditionalWorkspaceNames;
    private getAvailableWorkspaceNames;
    private getAvailableWorkspacePkgNames;
    private determineIncludedWorkspaces;
    getManifestForWorkspace(name: string): PackageJson | undefined;
    getIncludedWorkspaces(): Workspace[];
    private getDescendentWorkspaces;
    private getIgnoredWorkspacesFor;
    getNegatedWorkspacePatterns(name: string): string[];
    private getConfigKeyForWorkspace;
    getWorkspaceConfig(workspaceName: string): any;
    getIgnores(workspaceName: string): {
        ignoreBinaries: (string | RegExp)[];
        ignoreDependencies: (string | RegExp)[];
    };
    getConfigForWorkspace(workspaceName: string, extensions?: string[]): {
        astro?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        angular?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        ava?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        babel?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        capacitor?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        changesets?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        commitizen?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        commitlint?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        cspell?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        cucumber?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        cypress?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        eleventy?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        eslint?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        gatsby?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        husky?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        jest?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        lefthook?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        linthtml?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        markdownlint?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        mocha?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        moonrepo?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        msw?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        netlify?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        next?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        nx?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        nyc?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        oclif?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        playwright?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        postcss?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        prettier?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        remark?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        remix?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        rollup?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        sentry?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        storybook?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        stryker?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        stylelint?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        svelte?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        tailwind?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        tsup?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        typedoc?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        typescript?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        unbuild?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        vue?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        vite?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        vitest?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        webpack?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        wireit?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        wrangler?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        yorkie?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        drizzle?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        githubActions?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        graphqlCodegen?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        lintStaged?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        nodeTestRunner?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        npmPackageJsonLint?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        playwrightCt?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        releaseIt?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        semanticRelease?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        vercelOg?: (boolean | import("./types/config.js").EnsuredPluginConfiguration) | undefined;
        entry: string[];
        project: string[];
        paths: any;
        ignore: string[];
        isIncludeEntryExports: any;
    };
    getIncludedIssueTypes(): import("./types/issues.js").Report;
    findWorkspaceByFilePath(filePath: string): Workspace | undefined;
    findWorkspaceByName(name: string): Workspace | undefined;
    getUnusedIgnoredWorkspaces(): string[];
}
export {};
