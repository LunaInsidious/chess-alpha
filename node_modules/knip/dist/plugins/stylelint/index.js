import { isInternal } from '#p/util/path.js';
import { hasDependency } from '#p/util/plugin.js';
const title = 'Stylelint';
const enablers = ['stylelint'];
const isEnabled = ({ dependencies }) => hasDependency(dependencies, enablers);
const config = ['.stylelintrc', '.stylelintrc.{cjs,js,json,yaml,yml}', 'stylelint.config.{cjs,mjs,js}'];
const resolve = (config) => {
    const extend = config.extends ? [config.extends].flat().filter(id => !isInternal(id)) : [];
    const plugins = config.plugins ? [config.plugins].flat().filter(id => !isInternal(id)) : [];
    const overrideConfigs = 'overrides' in config ? config.overrides.flatMap(resolve) : [];
    return [...extend, ...plugins, ...overrideConfigs];
};
const resolveConfig = config => resolve(config);
export default {
    title,
    enablers,
    isEnabled,
    config,
    resolveConfig,
};
