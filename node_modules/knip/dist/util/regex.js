export const toRegexOrString = (value) => typeof value === 'string' && /[*+\\(|{^$]/.test(value) ? new RegExp(value) : value;
export const hasMatch = (haystack, needle) => haystack?.some(n => (typeof n === 'string' ? n === needle : n.test(needle)));
export const hasMatchInSet = (haystack, needle) => haystack && (typeof needle === 'string' ? haystack.has(needle) : [...haystack].some(n => needle.test(n)));
export const findKey = (map, key) => [...map.keys()].find(k => k instanceof RegExp && k.source === key.source);
